###############################################################
# Git Configs and Helper Functions
###############################################################

# == Shared Git Config
# To get the latest shared .gitconfig run:
#    ~/$CONFIGS_PATH/bin/tidbits_update_gitconfig

# parse_git_branch() {
#   git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'
# }

function parse_git_branch {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "("${ref#refs/heads/}")"
}

complete -o default -o nospace -W "$(/usr/bin/env ruby -ne 'puts $_.split(/[,\s]+/)[1..-1].reject{|host| host.match(/\*|\?/)} if $_.match(/^\s*Host\s+/);' < $HOME/.ssh/config)" scp sftp ssh

# usage: gitpub <branch_name>
# ex: gitpub foo
#
# Pushes a local branch to the remote origin
# and sets up the local branch as a remote
# tracking one with the correct remote
# and merge settings.
# function gitpub {
#   git push origin $1\:refs/heads/$1
#   git fetch origin
#   git config branch.$1.remote origin
#   git config branch.$1.merge refs/heads/$1
#   git checkout $1
# }

# alias gitamend='git ci --amend -C HEAD'
# alias gitmod='git status | grep "modified:" | third'
# alias gitdel='git status | grep "deleted:"'
# alias gits='git status'
# alias gitbr='git branch'
# alias giton='git checkout '
# alias gitsup='git svn rebase'
# alias gitlog='git log --name-status'
# alias gitundo='git rm -f --cached'
# alias gitlogst='git log --stat'
# alias cmp_origin_to_master='git log origin/master..master'
# alias cmp_master_to_origin='git log master..origin/master'
# alias cmp_head_to_master='git log HEAD..master'
# alias cmp_master_to_head='git log master..HEAD'

# Git Flow Completion
source $(pwd)/$CONFIGS_PATH/git-flow-completion/.git-flow-completion.sh

PS1="$RED\$(date +%H:%M) \w$YELLOW \$(parse_git_branch)$WHITE \$ "